{"version":3,"sources":["./src/app/toprooms/toprooms-routing.module.ts","./src/app/toprooms/toprooms.module.ts","./src/app/toprooms/toprooms.page.ts","./src/app/toprooms/toprooms.page.scss","./src/app/toprooms/toprooms.page.html"],"names":[],"mappings":"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","file":"src_app_toprooms_toprooms_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ToproomsPage } from './toprooms.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ToproomsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ToproomsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { ToproomsPageRoutingModule } from './toprooms-routing.module';\n\nimport { ToproomsPage } from './toprooms.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ToproomsPageRoutingModule,\n    ChartsModule,\n  ],\n  declarations: [ToproomsPage],\n})\nexport class ToproomsPageModule {}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/member-delimiter-style */\n/* eslint-disable no-underscore-dangle */\nimport { NgForm } from '@angular/forms';\nimport { GrServiceService } from 'src/app/_services/gr-service.service';\nimport { AppService } from 'src/app/_services/app.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Storage } from '@capacitor/storage';\nimport { format } from 'date-fns';\nimport * as moment from 'moment';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-toprooms',\n  templateUrl: './toprooms.page.html',\n  styleUrls: ['./toprooms.page.scss'],\n})\nexport class ToproomsPage implements OnInit {\n  fullData: any;\n  durationDays: string;\n  type = 'ch';\n  month: string;\n  month1: string;\n  date: string;\n  api_token: any;\n  fullDatagr: any;\n  model: any = {};\n  maxroomForm: NgForm;\n  roomCountForm: NgForm;\n  usersCountForm: NgForm;\n  date_entered: any[] = [];\n  no_rooms: number[] = [];\n  date_enteredgr: any[] = [];\n  no_roomsgr: number[] = [];\n  hour: any[] = [];\n  no_rooms2: number[] = [];\n  hourgr: any[] = [];\n  no_rooms2gr: number[] = [];\n  hour2: any[] = [];\n  no_users: number[] = [];\n  hour2gr: any[] = [];\n  no_usersgr: number[] = [];\n  date_entered2: any[] = [];\n  no_users2: number[] = [];\n  date_entered2gr: any[] = [];\n  no_users2gr: number[] = [];\n\n  public lineChartData: ChartDataSets[] = [\n    { data: this.no_rooms, label: 'No of rooms' },\n  ];\n  public lineChartData2: ChartDataSets[] = [\n    { data: this.no_rooms2, label: 'No of rooms' },\n  ];\n  public lineChartData3: ChartDataSets[] = [\n    { data: this.no_users, label: 'No of users' },\n  ];\n  public lineChartData4: ChartDataSets[] = [\n    { data: this.no_users2, label: 'No of users' },\n  ];\n  public lineChartLabels: Label[] = this.date_entered;\n  public lineChartLabels2: Label[] = this.hour;\n  public lineChartLabels3: Label[] = this.hour2;\n  public lineChartLabels4: Label[] = this.date_entered2;\n\n  public lineChartDatagr: ChartDataSets[] = [\n    { data: this.no_roomsgr, label: 'No of rooms' },\n  ];\n  public lineChartData2gr: ChartDataSets[] = [\n    { data: this.no_rooms2gr, label: 'No of rooms' },\n  ];\n  public lineChartData3gr: ChartDataSets[] = [\n    { data: this.no_usersgr, label: 'No of users' },\n  ];\n  public lineChartData4gr: ChartDataSets[] = [\n    { data: this.no_users2gr, label: 'No of users' },\n  ];\n  public lineChartLabelsgr: Label[] = this.date_enteredgr;\n  public lineChartLabels2gr: Label[] = this.hourgr;\n  public lineChartLabels3gr: Label[] = this.hour2gr;\n  public lineChartLabels4gr: Label[] = this.date_entered2gr;\n  public lineChartColors: Color[] = [\n    {\n      // grey\n      backgroundColor: 'rgba(9, 175, 252, .7)',\n      borderColor: 'rgba(9, 175, 252,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderColor: 'rgba(9, 175, 252,1)',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177, 0.8)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartColors2: Color[] = [\n    {\n      // grey\n      backgroundColor: 'rgba(20, 128, 0, 0.7)',\n      borderColor: 'green',\n      pointBackgroundColor: '#fff',\n      pointBorderColor: 'green',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartColors3: Color[] = [\n    {\n      // green\n      backgroundColor: 'rgba(77,83,96,0.7)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'white',\n      pointBorderColor: 'rgba(77,83,96,1)',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartColors4: Color[] = [\n    {\n      // green\n      backgroundColor: 'rgba(122, 111, 180, 0.7)',\n      borderColor: 'rgba(56, 34, 179,1)',\n      pointBackgroundColor: 'white',\n      pointBorderColor: 'rgba(56, 34, 179,1)',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(56, 34, 179,1)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  public lineChartLegend = false;\n  public lineChartType: ChartType = 'bar';\n  public lineChartType2: ChartType = 'bar';\n  public lineChartType3: ChartType = 'bar';\n  public lineChartType4: ChartType = 'bar';\n  public lineChartPlugins = [];\n\n  constructor(\n    private router: Router,\n    private app: AppService,\n    private toastController: ToastController,\n    private loadingController: LoadingController,\n    private gr: GrServiceService\n  ) {}\n\n  async ngOnInit() {\n    const user: any = await JSON.parse(localStorage.getItem('user'));\n    const result = user.result;\n    this.api_token = result.api_token;\n    this.date = moment().format('YYYY-MM-DD');\n    this.month = moment().format('MM');\n    this.month1 = moment().format('MMMM');\n    // this.getWeeklyTopRooms();\n    // this.getWeeklyTopRoomsgr();\n    this.weeklyRooms();\n    this.roomsCount();\n    this.roomsCountgr();\n    this.usersCount();\n    this.usersCountgr();\n    this.weeklyUsers();\n    this.weeklyUsersgr();\n  }\n\n  async getWeeklyTopRooms() {\n    const loading = await this.loadingController.create({\n      spinner: null,\n      cssClass: 'custom-loading',\n    });\n    await loading.present();\n    this.app\n      .WeeklyTopRooms(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        await loading.dismiss();\n        if (res.status === 'success') {\n          this.fullData = res.result;\n          // this.fullData = arr.slice(Math.max(arr.length - 3, 0));\n          //           date_ended: \"2021-07-03 16:07:56\"\n          // date_started: \"2021-07-03 10:11:01\"\n          // alert(this.thisDay);\n        } else {\n        }\n      });\n  }\n\n  async getWeeklyTopRoomsgr() {\n    this.gr\n      .WeeklyTopRooms(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        if (res.status === 'success') {\n          this.fullDatagr = res.result;\n          // this.fullDatagr = arr.slice(Math.max(arr.length - 3, 0));\n          //           date_ended: \"2021-07-03 16:07:56\"\n          // date_started: \"2021-07-03 10:11:01\"\n          // alert(this.thisDay);\n        } else {\n        }\n      });\n  }\n\n  async weeklyRooms() {\n    this.date_entered.length = 0;\n    this.no_rooms.length = 0;\n    const loading = await this.loadingController.create({\n      spinner: null,\n      cssClass: 'custom-loading',\n    });\n    await loading.present();\n    this.app\n      .getMaxroomsinWeek(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        await loading.dismiss();\n        // console.log(res);\n        const data = res.result;\n        for (const x of data) {\n          // const datepipe: DatePipe = new DatePipe('en-US');\n          // const formattedDate = datepipe.transform(x.date, 'h:mm a');\n          // console.log(formattedDate);\n          const no_rooms: number = parseFloat(x.no_rooms);\n          const date = x.date;\n          this.no_rooms.push(no_rooms);\n          this.date_entered.push(date);\n        }\n        // console.log(this.no_rooms);\n        // console.log(this.date_entered);\n      });\n    // this.model = {};\n  }\n\n  async weeklyUsers() {\n    this.date_entered2.length = 0;\n    this.no_users2.length = 0;\n    this.app\n      .getusersinweek(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        const data = res.result;\n        for (const x of data) {\n          const no_rooms: number = parseFloat(x.no_users);\n          const date = x.date;\n          this.no_users2.push(no_rooms);\n          this.date_entered2.push(date);\n        }\n        console.log(this.no_users2);\n        console.log(this.date_entered2);\n      });\n  }\n\n  async weeklyUsersgr() {\n    this.date_entered2gr.length = 0;\n    this.no_users2gr.length = 0;\n    this.gr\n      .getusersinweek(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        const data = res.result;\n        for (const x of data) {\n          const no_rooms: number = parseFloat(x.no_users);\n          const date = x.date;\n          this.no_users2gr.push(no_rooms);\n          this.date_entered2gr.push(date);\n        }\n      });\n  }\n\n  weeklyRoomsgr() {\n    this.date_enteredgr.length = 0;\n    this.no_roomsgr.length = 0;\n    this.gr\n      .getMaxroomsinWeek(this.api_token, this.date)\n      .subscribe((res: any) => {\n        // console.log(res);\n        const data = res.result;\n        for (const x of data) {\n          const no_rooms: number = parseFloat(x.no_rooms);\n          const date = x.date;\n          this.no_roomsgr.push(no_rooms);\n          this.date_enteredgr.push(date);\n        }\n        // console.log(this.no_rooms);\n        // console.log(this.date_entered);\n      });\n    // this.date = moment().format('YYYY-MM-DD');\n    // this.model = {};\n  }\n\n  async roomsCount() {\n    this.hour.length = 0;\n    this.no_rooms2.length = 0;\n\n    this.app\n      .getRoomsCount(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        // await loading.dismiss();\n        // console.log(res);\n        const data = res.result;\n        for (const x of data) {\n          // const datepipe: DatePipe = new DatePipe('en-US');\n          // const formattedDate = datepipe.transform(x.date, 'h:mm a');\n          // console.log(formattedDate);\n          const no_rooms: number = parseFloat(x.no_rooms);\n          const date = x.hour;\n          this.no_rooms2.push(no_rooms);\n          this.hour.push(date);\n        }\n        // console.log(this.no_rooms2);\n        // console.log(this.hour);\n      });\n    // this.model = {};\n  }\n\n  async roomsCountgr() {\n    this.gr\n      .getRoomsCount(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        // await loading.dismiss();\n        // console.log(res);\n        const data = res.result;\n        for (const x of data) {\n          // const datepipe: DatePipe = new DatePipe('en-US');\n          // const formattedDate = datepipe.transform(x.date, 'h:mm a');\n          // console.log(formattedDate);\n          const no_rooms: number = parseFloat(x.no_rooms);\n          const date = x.hour;\n          this.no_rooms2gr.push(no_rooms);\n          this.hourgr.push(date);\n        }\n        // console.log(this.no_rooms2gr);\n        // console.log(this.hourgr);\n      });\n    // this.model = {};\n  }\n\n  async usersCount() {\n    this.hour2.length = 0;\n    this.no_users.length = 0;\n\n    this.app\n      .getUsersCount(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        // await loading.dismiss();\n        // console.log(res);\n        if (res.status === 'success') {\n          const data = res.result;\n          for (const x of data) {\n            const no_users: number = parseFloat(x.no_users);\n            const hour = x.hour;\n            this.no_users.push(no_users);\n            this.hour2.push(hour);\n          }\n          // console.log(this.no_users);\n          // console.log(this.hour);\n        } else {\n          this.presentToast(res.message, 'danger');\n        }\n      });\n    // this.model = {};\n  }\n\n  async usersCountgr() {\n    this.hour2gr.length = 0;\n    this.no_usersgr.length = 0;\n\n    this.gr\n      .getUsersCount(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        // await loading.dismiss();\n        // console.log(res);\n        if (res.status === 'success') {\n          const data = res.result;\n          for (const x of data) {\n            const no_users: number = parseFloat(x.no_users);\n            const hour = x.hour;\n            this.no_usersgr.push(no_users);\n            this.hour2gr.push(hour);\n          }\n          // console.log(this.no_users);\n          // console.log(this.hour);\n        } else {\n          this.presentToast(res.message, 'danger');\n        }\n      });\n    // this.model = {};\n  }\n\n  onClick(channel) {\n    this.router.navigateByUrl('/tabs/chtools/track/' + channel);\n  }\n  onClick2(channel) {\n    this.router.navigateByUrl('/tabs/grtools/track/' + channel);\n  }\n\n  getDateDiff(now, end) {\n    // console.log(now, end);\n    // const now = moment(new Date()); //todays date\n    // const end = moment('2015-12-1'); // another date\n    const data = now.split();\n    const testing = data[0].replace(/-/g, '/');\n    const data2 = end.split();\n    const testing2 = data2[0].replace(/-/g, '/');\n    // const datta2 = dattta[0].replace(/T/g, ' ');\n    const duration = moment(testing2, 'YYYY/MM/DD HH:mm:ss').diff(\n      moment(testing, 'YYYY/MM/DD HH:mm:ss')\n    );\n    // const days = duration.asHours();\n    const secssss = moment.duration(duration).seconds();\n    const minsss = moment.duration(duration).minutes();\n    const hrsss = Math.trunc(moment.duration(duration).asHours());\n    this.durationDays = hrsss + ':' + minsss + ':' + secssss;\n    // console.log(this.durationDays);\n    return this.durationDays;\n  }\n\n  segmentChanged(ev) {}\n\n  onSubmit(ev) {\n    // console.log(ev);\n\n    let date = this.model.date;\n    date = format(new Date(date), 'yyyy-MM-dd');\n    // console.log(date);\n    this.date = date;\n    this.weeklyRooms();\n    this.weeklyRoomsgr();\n    this.weeklyUsers();\n    this.weeklyUsersgr();\n    this.roomsCount();\n    this.roomsCountgr();\n    this.usersCount();\n    this.usersCountgr();\n    setTimeout(() => {\n      this.date = moment().format('YYYY-MM-DD');\n    }, 3000);\n  }\n\n  public randomize(): void {\n    this.lineChartType = this.lineChartType === 'line' ? 'bar' : 'line';\n  }\n\n  public randomize2(): void {\n    // console.log('ddd');\n    this.lineChartType2 = this.lineChartType2 === 'bar' ? 'line' : 'bar';\n  }\n\n  public randomize3(): void {\n    // console.log('ddd');\n    this.lineChartType3 = this.lineChartType3 === 'bar' ? 'line' : 'bar';\n  }\n\n  public randomize4(): void {\n    // console.log('ddd');\n    this.lineChartType4 = this.lineChartType4 === 'bar' ? 'line' : 'bar';\n  }\n\n  async presentToast(message, color) {\n    const toast = await this.toastController.create({\n      message,\n      color,\n      duration: 2000,\n    });\n    toast.present();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b3Byb29tcy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-title>Rooms Stats</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <form name=\\\"form\\\" #maxroomForm=\\\"ngForm\\\" (ngSubmit)=\\\"maxroomForm.valid && onSubmit(maxroomForm.value)\\\">\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Select Date</ion-label>\\n        <ion-datetime name=\\\"selectedDate\\\" [(ngModel)]=\\\"model.date\\\" #selectedDate=\\\"ngModel\\\" displayFormat=\\\"MM/DD/YYYY\\\"\\n          min=\\\"2016-01-01\\\" [max]=\\\"date\\\" required>\\n        </ion-datetime>\\n      </ion-item>\\n      <ion-button type=\\\"submit\\\" [disabled]=\\\"!maxroomForm.valid\\\" expand=\\\"full\\\" color=\\\"primary\\\">Submit\\n      </ion-button>\\n    </form>\\n  </ion-card>\\n  <br>\\n\\n  <div style=\\\"margin: 16px 9px !important\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h5 style=\\\"margin-bottom: 0\\\">\\n        <span> Max. tracked rooms for the week </span>\\n      </h5>\\n    </ion-text>\\n    <div class=\\\"clear\\\"></div>\\n    <!-- <br> -->\\n  </div>\\n  <ion-card>\\n    <ion-card-header>\\n      <div class=\\\"tabbar\\\">\\n        <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n          <ion-segment-button value=\\\"ch\\\">\\n            <ion-label>Clubhouse</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"gr\\\">\\n            <ion-label>GreenRoom</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </div>\\n\\n      <div class=\\\"clear\\\"></div>\\n    </ion-card-header>\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'ch'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n        <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize()\\\">\\n          <a>\\n            <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n          </a>\\n          <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n            <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n              Change Style\\n            </p>\\n          </ion-text>\\n        </div>\\n      </div>\\n\\n      <div *ngSwitchCase=\\\"'gr'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartDatagr\\\" [labels]=\\\"lineChartLabelsgr\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n        <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize()\\\">\\n          <a>\\n            <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n          </a>\\n          <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n            <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n              Change Style\\n            </p>\\n          </ion-text>\\n        </div>\\n      </div>\\n    </div>\\n  </ion-card>\\n\\n  <br>\\n\\n  <div style=\\\"margin: 16px 9px !important\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h5 style=\\\"margin-bottom: 0\\\">\\n        <span>Max. users for the week </span>\\n      </h5>\\n    </ion-text>\\n    <div class=\\\"clear\\\"></div>\\n    <!-- <br> -->\\n  </div>\\n  <ion-card>\\n    <ion-card-header>\\n      <div class=\\\"tabbar\\\">\\n        <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n          <ion-segment-button value=\\\"ch\\\">\\n            <ion-label>Clubhouse</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"gr\\\">\\n            <ion-label>GreenRoom</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </div>\\n\\n      <div class=\\\"clear\\\"></div>\\n    </ion-card-header>\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'ch'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData4\\\" [labels]=\\\"lineChartLabels4\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors4\\\" [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType4\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n      </div>\\n\\n      <div *ngSwitchCase=\\\"'gr'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData4gr\\\" [labels]=\\\"lineChartLabels4gr\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors4\\\" [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType4\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n\\n      </div>\\n    </div>\\n    <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize4()\\\">\\n      <a>\\n        <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n      </a>\\n      <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n        <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n          Change Style\\n        </p>\\n      </ion-text>\\n    </div>\\n  </ion-card>\\n\\n  <br>\\n\\n\\n\\n  <div style=\\\"margin: 16px 9px !important\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h5 style=\\\"margin-bottom: 0\\\">\\n        <span>Tracked rooms count </span>\\n      </h5>\\n    </ion-text>\\n    <div class=\\\"clear\\\"></div>\\n    <!-- <br> -->\\n  </div>\\n  <ion-card>\\n    <ion-card-header>\\n      <div class=\\\"tabbar\\\">\\n        <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n          <ion-segment-button value=\\\"ch\\\">\\n            <ion-label>Clubhouse</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"gr\\\">\\n            <ion-label>GreenRoom</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </div>\\n\\n      <div class=\\\"clear\\\"></div>\\n    </ion-card-header>\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'ch'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData2\\\" [labels]=\\\"lineChartLabels2\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors2\\\" [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType2\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n        <!-- <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize()\\\">\\n          <a>\\n            <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n          </a>\\n          <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n            <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n              Change Style\\n            </p>\\n          </ion-text>\\n        </div> -->\\n      </div>\\n\\n      <div *ngSwitchCase=\\\"'gr'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData2gr\\\" [labels]=\\\"lineChartLabels2gr\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors2\\\" [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType2\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n\\n      </div>\\n    </div>\\n    <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize2()\\\">\\n      <a>\\n        <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n      </a>\\n      <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n        <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n          Change Style\\n        </p>\\n      </ion-text>\\n    </div>\\n  </ion-card>\\n\\n  <br>\\n\\n\\n  <div style=\\\"margin: 16px 9px !important\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h5 style=\\\"margin-bottom: 0\\\">\\n        <span>Users in tracked rooms </span>\\n      </h5>\\n    </ion-text>\\n    <div class=\\\"clear\\\"></div>\\n    <!-- <br> -->\\n  </div>\\n  <ion-card>\\n    <ion-card-header>\\n      <div class=\\\"tabbar\\\">\\n        <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n          <ion-segment-button value=\\\"ch\\\">\\n            <ion-label>Clubhouse</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"gr\\\">\\n            <ion-label>GreenRoom</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </div>\\n\\n      <div class=\\\"clear\\\"></div>\\n    </ion-card-header>\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'ch'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData3\\\" [labels]=\\\"lineChartLabels3\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors3\\\" [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType3\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n      </div>\\n\\n      <div *ngSwitchCase=\\\"'gr'\\\">\\n        <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData3gr\\\" [labels]=\\\"lineChartLabels3gr\\\"\\n          [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors3\\\" [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType3\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n\\n      </div>\\n    </div>\\n    <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize3()\\\">\\n      <a>\\n        <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n      </a>\\n      <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n        <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n          Change Style\\n        </p>\\n      </ion-text>\\n    </div>\\n  </ion-card>\\n\\n  <br>\\n\\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}