{"version":3,"sources":["./node_modules/ngx-stripe/__ivy_ngcc__/fesm2015/ngx-stripe.js","./src/app/upgrade/upgrade-routing.module.ts","./src/app/upgrade/upgrade.module.ts","./src/app/upgrade/upgrade.page.ts","./src/app/upgrade/upgrade.page.scss","./src/app/upgrade/upgrade.page.html"],"names":[],"mappings":"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","file":"src_app_upgrade_upgrade_module_ts.js","sourcesContent":["import { InjectionToken, Injectable, Inject, PLATFORM_ID, EventEmitter, Component, ViewChild, Input, Output, Directive, Optional, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { BehaviorSubject, from } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"stripeElementRef\"];\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass WindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return window;\n        }\n        return {};\n    }\n}\nWindowRef.ɵfac = function WindowRef_Factory(t) { return new (t || WindowRef)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nWindowRef.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: WindowRef, factory: WindowRef.ɵfac });\nWindowRef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WindowRef, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\nclass DocumentRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeDocument() {\n        if (isPlatformBrowser(this.platformId)) {\n            return document;\n        }\n        return {};\n    }\n}\nDocumentRef.ɵfac = function DocumentRef_Factory(t) { return new (t || DocumentRef)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nDocumentRef.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DocumentRef, factory: DocumentRef.ɵfac });\nDocumentRef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DocumentRef, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\nclass LazyStripeAPILoader {\n    constructor(platformId, window, document) {\n        this.platformId = platformId;\n        this.window = window;\n        this.document = document;\n        this.status = new BehaviorSubject({\n            error: false,\n            loaded: false,\n            loading: false\n        });\n    }\n    asStream() {\n        this.load();\n        return this.status.asObservable();\n    }\n    isReady() {\n        return this.status.getValue().loaded;\n    }\n    load() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        const status = this.status.getValue();\n        if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n            this.status.next({\n                error: false,\n                loaded: true,\n                loading: false\n            });\n        }\n        else if (!status.loaded && !status.loading) {\n            this.status.next(Object.assign(Object.assign({}, status), { loading: true }));\n            const script = this.document.getNativeDocument().createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = 'https://js.stripe.com/v3/';\n            script.onload = () => {\n                this.status.next({\n                    error: false,\n                    loaded: true,\n                    loading: false\n                });\n            };\n            script.onerror = () => {\n                this.status.next({\n                    error: true,\n                    loaded: false,\n                    loading: false\n                });\n            };\n            this.document.getNativeDocument().body.appendChild(script);\n        }\n    }\n}\nLazyStripeAPILoader.ɵfac = function LazyStripeAPILoader_Factory(t) { return new (t || LazyStripeAPILoader)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef)); };\nLazyStripeAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LazyStripeAPILoader, factory: LazyStripeAPILoader.ɵfac });\nLazyStripeAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: WindowRef },\n    { type: DocumentRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyStripeAPILoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: WindowRef }, { type: DocumentRef }]; }, null); })();\n\nclass StripeInstance {\n    constructor(version, loader, window, key, options) {\n        this.version = version;\n        this.loader = loader;\n        this.window = window;\n        this.key = key;\n        this.options = options;\n        this.stripe$ = new BehaviorSubject(undefined);\n        this.stripe = this.stripe$\n            .asObservable()\n            .pipe(filter((stripe) => Boolean(stripe)));\n        this.loader\n            .asStream()\n            .pipe(filter((status) => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe))\n            .subscribe((stripeInstance) => {\n            const stripe = this.options\n                ? stripeInstance(this.key, this.options)\n                : stripeInstance(this.key);\n            stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n            this.stripe$.next(stripe);\n        });\n    }\n    getInstance() {\n        return this.stripe$.getValue();\n    }\n    elements(options) {\n        return this.stripe$.asObservable().pipe(filter((stripe) => Boolean(stripe)), map((stripe) => stripe.elements(options)), first());\n    }\n    redirectToCheckout(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.redirectToCheckout(options))), first());\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n    }\n    confirmSofortPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortPayment(clientSecret, data))), first());\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardAction(clientSecret))), first());\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createPaymentMethod(paymentMethodData))), first());\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))), first());\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n    }\n    confirmSofortSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortSetup(clientSecret, data))), first());\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))), first());\n    }\n    paymentRequest(options) {\n        const stripe = this.getInstance();\n        return stripe ? stripe.paymentRequest(options) : undefined;\n    }\n    createToken(tokenType, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createToken(tokenType, data))), first());\n    }\n    createSource(a, b) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createSource(a, b))), first());\n    }\n    retrieveSource(source) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSource(source))), first());\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyIdentity(clientSecret))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n    }\n    getNgxStripeAppInfo(version) {\n        return {\n            name: 'ngx-stripe',\n            url: 'https://ngx-stripe.dev',\n            partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n            version\n        };\n    }\n}\n\nclass StripeService {\n    constructor(version, key, options, loader, window) {\n        this.version = version;\n        this.key = key;\n        this.options = options;\n        this.loader = loader;\n        this.window = window;\n        if (key) {\n            this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        }\n    }\n    getStripeReference() {\n        return this.loader.asStream().pipe(filter((status) => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n    }\n    getInstance() {\n        return this.stripe.getInstance();\n    }\n    setKey(key, options) {\n        return this.changeKey(key, options);\n    }\n    changeKey(key, options) {\n        this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        return this.stripe;\n    }\n    elements(options) {\n        return this.stripe.elements(options);\n    }\n    redirectToCheckout(options) {\n        return this.stripe.redirectToCheckout(options);\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.confirmCardPayment(clientSecret, data, options);\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.confirmEpsPayment(clientSecret, data, options);\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.confirmFpxPayment(clientSecret, data, options);\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.confirmIdealPayment(clientSecret, data, options);\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.confirmP24Payment(clientSecret, data, options);\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n    }\n    confirmSofortPayment(clientSecret, data) {\n        return this.stripe.confirmSofortPayment(clientSecret, data);\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.handleCardAction(clientSecret);\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.createPaymentMethod(paymentMethodData);\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.retrievePaymentIntent(clientSecret);\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.confirmBancontactSetup(clientSecret, data);\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.confirmCardSetup(clientSecret, data, options);\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.confirmIdealSetup(clientSecret, data);\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n    }\n    confirmSofortSetup(clientSecret, data) {\n        return this.stripe.confirmSofortSetup(clientSecret, data);\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.retrieveSetupIntent(clientSecret);\n    }\n    paymentRequest(options) {\n        return this.stripe.paymentRequest(options);\n    }\n    createToken(tokenType, data) {\n        return this.stripe.createToken(tokenType, data);\n    }\n    createSource(a, b) {\n        return this.stripe.createSource(a, b);\n    }\n    retrieveSource(source) {\n        return this.stripe.retrieveSource(source);\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.verifyIdentity(clientSecret);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.handleCardPayment(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.handleCardSetup(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.confirmSetupIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.handleFpxPayment(clientSecret, element, data);\n    }\n}\nStripeService.ɵfac = function StripeService_Factory(t) { return new (t || StripeService)(ɵngcc0.ɵɵinject(NGX_STRIPE_VERSION), ɵngcc0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), ɵngcc0.ɵɵinject(STRIPE_OPTIONS), ɵngcc0.ɵɵinject(LazyStripeAPILoader), ɵngcc0.ɵɵinject(WindowRef)); };\nStripeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: StripeService, factory: StripeService.ɵfac });\nStripeService.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [NGX_STRIPE_VERSION,] }] },\n    { type: String, decorators: [{ type: Inject, args: [STRIPE_PUBLISHABLE_KEY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [STRIPE_OPTIONS,] }] },\n    { type: LazyStripeAPILoader },\n    { type: WindowRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeService, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [NGX_STRIPE_VERSION]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [STRIPE_PUBLISHABLE_KEY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [STRIPE_OPTIONS]\n            }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; }, null); })();\n\nclass StripeElementsService {\n    constructor(stripeService) {\n        this.stripeService = stripeService;\n    }\n    elements(stripe, options = {}) {\n        if (stripe) {\n            if (Object.keys(options).length > 0) {\n                return stripe.elements(options);\n            }\n            return stripe.elements();\n        }\n        else {\n            if (Object.keys(options).length > 0) {\n                return this.stripeService.elements(options);\n            }\n            return this.stripeService.elements();\n        }\n    }\n    paymentRequest(stripe, options) {\n        return stripe\n            ? stripe.paymentRequest(options)\n            : this.stripeService.paymentRequest(options);\n    }\n    mergeOptions(options, containerClass) {\n        if (!containerClass || (options && options.classes)) {\n            return options || {};\n        }\n        if (!options || !options.classes) {\n            return Object.assign(Object.assign({}, (options || {})), { classes: {\n                    base: containerClass,\n                    complete: `${containerClass}--complete`,\n                    empty: `${containerClass}--empty`,\n                    focus: `${containerClass}--focus`,\n                    invalid: `${containerClass}--invalid`,\n                    webkitAutoFill: `${containerClass}--webkit-autoFill`\n                } });\n        }\n        return options || {};\n    }\n}\nStripeElementsService.ɵfac = function StripeElementsService_Factory(t) { return new (t || StripeElementsService)(ɵngcc0.ɵɵinject(StripeService)); };\nStripeElementsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: StripeElementsService, factory: StripeElementsService.ɵfac });\nStripeElementsService.ctorParameters = () => [\n    { type: StripeService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeElementsService, [{\n        type: Injectable\n    }], function () { return [{ type: StripeService }]; }, null); })();\n\nclass StripeCardComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCard() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('card', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeCardComponent.ɵfac = function StripeCardComponent_Factory(t) { return new (t || StripeCardComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeCardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeCardComponent, selectors: [[\"ngx-stripe-card\"]], viewQuery: function StripeCardComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeCardComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeCardComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeCardComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripeCardGroupDirective {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.elements = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const elementsOptions = this.elementsOptions;\n            const stripe = this.stripe;\n            if (changes.elementsOptions || changes.stripe || !this._elements) {\n                this._elements = yield this.stripeElementsService\n                    .elements(stripe, elementsOptions)\n                    .toPromise();\n                this.elements.emit(this._elements);\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this._elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.elements.emit(this._elements);\n                this.state = 'ready';\n            }\n        });\n    }\n}\nStripeCardGroupDirective.ɵfac = function StripeCardGroupDirective_Factory(t) { return new (t || StripeCardGroupDirective)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeCardGroupDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: StripeCardGroupDirective, selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]], inputs: { elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { elements: \"elements\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nStripeCardGroupDirective.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeCardGroupDirective.propDecorators = {\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    elements: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeCardGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { elements: [{\n            type: Output\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripeCardNumberComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardNumber() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardNumber', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardNumberComponent.ɵfac = function StripeCardNumberComponent_Factory(t) { return new (t || StripeCardNumberComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService), ɵngcc0.ɵɵdirectiveInject(StripeCardGroupDirective, 8)); };\nStripeCardNumberComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeCardNumberComponent, selectors: [[\"ngx-stripe-card-number\"]], viewQuery: function StripeCardNumberComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardNumberComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeCardNumberComponent.ctorParameters = () => [\n    { type: StripeElementsService },\n    { type: StripeCardGroupDirective, decorators: [{ type: Optional }] }\n];\nStripeCardNumberComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeCardNumberComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card-number',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                type: Optional\n            }] }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\nclass StripeCardExpiryComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardExpiry() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardExpiry', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardExpiryComponent.ɵfac = function StripeCardExpiryComponent_Factory(t) { return new (t || StripeCardExpiryComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService), ɵngcc0.ɵɵdirectiveInject(StripeCardGroupDirective, 8)); };\nStripeCardExpiryComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeCardExpiryComponent, selectors: [[\"ngx-stripe-card-expiry\"]], viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardExpiryComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeCardExpiryComponent.ctorParameters = () => [\n    { type: StripeElementsService },\n    { type: StripeCardGroupDirective, decorators: [{ type: Optional }] }\n];\nStripeCardExpiryComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeCardExpiryComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card-expiry',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                type: Optional\n            }] }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\nclass StripeCardCvcComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardCvc() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardCvc', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardCvcComponent.ɵfac = function StripeCardCvcComponent_Factory(t) { return new (t || StripeCardCvcComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService), ɵngcc0.ɵɵdirectiveInject(StripeCardGroupDirective, 8)); };\nStripeCardCvcComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeCardCvcComponent, selectors: [[\"ngx-stripe-card-cvc\"]], viewQuery: function StripeCardCvcComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardCvcComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeCardCvcComponent.ctorParameters = () => [\n    { type: StripeElementsService },\n    { type: StripeCardGroupDirective, decorators: [{ type: Optional }] }\n];\nStripeCardCvcComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeCardCvcComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card-cvc',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                type: Optional\n            }] }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\nclass StripeFpxBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getFpxBank() {\n        return this.element;\n    }\n    createElement(options = { accountHolderType: 'individual' }) {\n        this.element = this.elements.create('fpxBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeFpxBankComponent.ɵfac = function StripeFpxBankComponent_Factory(t) { return new (t || StripeFpxBankComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeFpxBankComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeFpxBankComponent, selectors: [[\"ngx-stripe-fpx-bank\"]], viewQuery: function StripeFpxBankComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeFpxBankComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeFpxBankComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeFpxBankComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeFpxBankComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-fpx-bank',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripeIdealBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIdealBank() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('idealBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIdealBankComponent.ɵfac = function StripeIdealBankComponent_Factory(t) { return new (t || StripeIdealBankComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeIdealBankComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeIdealBankComponent, selectors: [[\"ngx-stripe-ideal-bank\"]], viewQuery: function StripeIdealBankComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeIdealBankComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeIdealBankComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeIdealBankComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeIdealBankComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-ideal-bank',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripeIbanComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIban() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('iban', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIbanComponent.ɵfac = function StripeIbanComponent_Factory(t) { return new (t || StripeIbanComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeIbanComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeIbanComponent, selectors: [[\"ngx-stripe-iban\"]], viewQuery: function StripeIbanComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeIbanComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeIbanComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeIbanComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeIbanComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-iban',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripeAuBankAccountComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAuBankAccount() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('auBankAccount', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeAuBankAccountComponent.ɵfac = function StripeAuBankAccountComponent_Factory(t) { return new (t || StripeAuBankAccountComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeAuBankAccountComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripeAuBankAccountComponent, selectors: [[\"ngx-stripe-au-bank-account\"]], viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeAuBankAccountComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripeAuBankAccountComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeAuBankAccountComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeAuBankAccountComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-au-bank-account',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripePaymentRequestButtonComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.token = new EventEmitter();\n        this.paymentMethod = new EventEmitter();\n        this.source = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.shippingaddresschange = new EventEmitter();\n        this.shippingoptionchange = new EventEmitter();\n        this.notavailable = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            const elementsOptions = this.elementsOptions;\n            const stripe = this.stripe;\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                const elements = yield this.stripeElementsService\n                    .elements(stripe, elementsOptions)\n                    .toPromise();\n                this.elements = elements;\n                updateElements = true;\n            }\n            if (changes.paymentOptions && this.paymentRequest) {\n                this.updateRequest(this.paymentOptions);\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.paymentRequest = this.stripeElementsService.paymentRequest(stripe, this.paymentOptions);\n                    this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n                    this.paymentRequest.on('paymentmethod', (ev) => this.paymentMethod.emit(ev));\n                    this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n                    this.paymentRequest.on('cancel', () => this.cancel.emit());\n                    this.paymentRequest.on('shippingaddresschange', (ev) => this.shippingaddresschange.emit(ev));\n                    this.paymentRequest.on('shippingoptionchange', (ev) => this.shippingoptionchange.emit(ev));\n                    this.element = this.elements.create('paymentRequestButton', Object.assign({ paymentRequest: this.paymentRequest }, options));\n                    this.canMakePayment().subscribe((result) => {\n                        if (result) {\n                            this.element.on('click', (ev) => this.change.emit(ev));\n                            this.element.on('blur', () => this.blur.emit());\n                            this.element.on('focus', () => this.focus.emit());\n                            this.element.on('ready', () => this.ready.emit());\n                            this.element.mount(this.stripeElementRef.nativeElement);\n                            this.load.emit({\n                                paymentRequestButton: this.element,\n                                paymentRequest: this.paymentRequest\n                            });\n                        }\n                        else {\n                            this.notavailable.emit();\n                        }\n                    });\n                }\n            }\n        });\n    }\n    canMakePayment() {\n        return from(this.paymentRequest.canMakePayment());\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    updateRequest(options) {\n        const { currency, total, displayItems, shippingOptions } = options;\n        this.paymentRequest.update({\n            currency,\n            total,\n            displayItems,\n            shippingOptions\n        });\n    }\n    show() {\n        this.paymentRequest.show();\n    }\n    /**\n     * @deprecated\n     */\n    getButton() {\n        return this.element;\n    }\n}\nStripePaymentRequestButtonComponent.ɵfac = function StripePaymentRequestButtonComponent_Factory(t) { return new (t || StripePaymentRequestButtonComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripePaymentRequestButtonComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StripePaymentRequestButtonComponent, selectors: [[\"ngx-stripe-payment-request-button\"]], viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", paymentOptions: \"paymentOptions\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", change: \"change\", blur: \"blur\", focus: \"focus\", ready: \"ready\", token: \"token\", paymentMethod: \"paymentMethod\", source: \"source\", cancel: \"cancel\", shippingaddresschange: \"shippingaddresschange\", shippingoptionchange: \"shippingoptionchange\", notavailable: \"notavailable\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripePaymentRequestButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\nStripePaymentRequestButtonComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripePaymentRequestButtonComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    paymentOptions: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    change: [{ type: Output }],\n    blur: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    token: [{ type: Output }],\n    paymentMethod: [{ type: Output }],\n    source: [{ type: Output }],\n    cancel: [{ type: Output }],\n    shippingaddresschange: [{ type: Output }],\n    shippingoptionchange: [{ type: Output }],\n    notavailable: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripePaymentRequestButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-payment-request-button',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], token: [{\n            type: Output\n        }], paymentMethod: [{\n            type: Output\n        }], source: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], shippingaddresschange: [{\n            type: Output\n        }], shippingoptionchange: [{\n            type: Output\n        }], notavailable: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], paymentOptions: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\nclass StripeFactoryService {\n    constructor(version, baseKey, baseOptions, loader, window) {\n        this.version = version;\n        this.baseKey = baseKey;\n        this.baseOptions = baseOptions;\n        this.loader = loader;\n        this.window = window;\n    }\n    create(key, options) {\n        if (!key && !this.baseKey) {\n            return null;\n        }\n        return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n    }\n}\nStripeFactoryService.ɵfac = function StripeFactoryService_Factory(t) { return new (t || StripeFactoryService)(ɵngcc0.ɵɵinject(NGX_STRIPE_VERSION), ɵngcc0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), ɵngcc0.ɵɵinject(STRIPE_OPTIONS), ɵngcc0.ɵɵinject(LazyStripeAPILoader), ɵngcc0.ɵɵinject(WindowRef)); };\nStripeFactoryService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: StripeFactoryService, factory: StripeFactoryService.ɵfac });\nStripeFactoryService.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [NGX_STRIPE_VERSION,] }] },\n    { type: String, decorators: [{ type: Inject, args: [STRIPE_PUBLISHABLE_KEY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [STRIPE_OPTIONS,] }] },\n    { type: LazyStripeAPILoader },\n    { type: WindowRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StripeFactoryService, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [NGX_STRIPE_VERSION]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [STRIPE_PUBLISHABLE_KEY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [STRIPE_OPTIONS]\n            }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; }, null); })();\n\nconst components = [\n    StripeCardComponent,\n    StripeCardNumberComponent,\n    StripeCardExpiryComponent,\n    StripeCardCvcComponent,\n    StripeFpxBankComponent,\n    StripeIdealBankComponent,\n    StripeIbanComponent,\n    StripeAuBankAccountComponent,\n    StripePaymentRequestButtonComponent\n];\nconst directives = [StripeCardGroupDirective];\nconst currentVersion = '12.3.1';\nclass NgxStripeModule {\n    static forRoot(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n    static forChild(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n}\nNgxStripeModule.ɵfac = function NgxStripeModule_Factory(t) { return new (t || NgxStripeModule)(); };\nNgxStripeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxStripeModule });\nNgxStripeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxStripeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [...components, ...directives],\n                exports: [...components, ...directives]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxStripeModule, { declarations: [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective], exports: [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective] }); })();\n\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentRequestButtonComponent, StripeService, WindowRef, NGX_STRIPE_VERSION as ɵa };\n\n//# sourceMappingURL=ngx-stripe.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpgradePage } from './upgrade.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpgradePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpgradePageRoutingModule {}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpgradePageRoutingModule } from './upgrade-routing.module';\n\nimport { UpgradePage } from './upgrade.page';\nimport { NgxStripeModule } from 'ngx-stripe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    UpgradePageRoutingModule,\n    NgxStripeModule.forRoot('pk_live_X0yHCliG01VXZYUlqsD2D88W00vkCJ4P5g'),\n  ],\n  declarations: [UpgradePage],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class UpgradePageModule {}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { StripeService, StripeCardComponent } from 'ngx-stripe';\nimport {\n  StripeCardElementOptions,\n  StripeElementsOptions,\n  PaymentIntent,\n} from '@stripe/stripe-js';\nimport { Router } from '@angular/router';\nimport { environment as env } from '../../environments/environment';\nimport { ToastController, LoadingController } from '@ionic/angular';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-upgrade',\n  templateUrl: './upgrade.page.html',\n  styleUrls: ['./upgrade.page.scss'],\n})\nexport class UpgradePage implements OnInit {\n  @ViewChild(StripeCardComponent) card: StripeCardComponent;\n\n  color = 'danger';\n  cardOptions: StripeCardElementOptions = {\n\t\tstyle: {\n\t\t\t// iconStyle: 'solid',\n      base: {\n        iconColor: '#7f7e78',\n        color: '#7f7e78',\n\t\t\t\tfontWeight: '300',\n\t\t\t\t// border: '1px solid #000',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Roboto\", sans-serif',\n        fontSize: '18px',\n        '::placeholder': {\n          color: '#7f7e78',\n        },\n      },\n    },\n  };\n\n  elementsOptions: StripeElementsOptions = {\n    locale: 'en',\n  };\n\n  stripeTest: FormGroup;\n\tamountinit: number;\n\tloading = false;\n\t// tslint:disable-next-line: variable-name\n\tapi_token: any;\n\tpriceSet = false;\n\ttitle: any;\n  result: any;\n  freeTrial = false;\n  upgrade: boolean;\n  userDetails: any;\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private admin: AuthService,\n\t\t  private stripeService: StripeService,\n    private router: Router,\n    private toastController: ToastController,\n    private loadingController: LoadingController\n  ) { }\n\n  async ngOnInit() {\n\n    const user: any = await JSON.parse(localStorage.getItem('user'));\n    const result = user.result;\n    this.userDetails = result;\n\t\t  this.api_token = result.api_token;\n\t\t  this.stripeTest = this.fb.group({\n      name: ['', [Validators.required]],\n      // amount: [1001, [Validators.required, Validators.pattern(/\\d+/)]],\n    });\n    this.getDetails();\n  }\n\n  async pay(): Promise<void> {\n\t\tthis.loading = true;\n    const loading = await this.loadingController.create({\n      spinner: null,\n      cssClass: 'custom-loading',\n    });\n    await loading.present();\n  if (this.stripeTest.valid) {\n      this.createPaymentIntent(this.api_token, this.amountinit)\n        .pipe(\n          switchMap((pi: any) =>\n            this.stripeService.confirmCardPayment(pi.result.client_secret, {\n              payment_method: {\n                card: this.card.element,\n                billing_details: {\n                  name: this.stripeTest.get('name').value,\n                },\n              },\n            })\n          )\n        )\n\t\t\t\t.subscribe(async (result) => {\n          await loading.dismiss();\n\t\t\t\t\tthis.loading = false;\n     if (result.error) {\n            // Show error to your customer (e.g., insufficient funds)\n            // const color = 'success';\n              this.presentToast(this.color, result.error.message);\n\t\t\t\t\t\t// this.alertService.danger(result.error.message);\n            // console.log(result.error.message);\n          } else {\n            // The payment has been processed!\n            if (result.paymentIntent.status === 'succeeded') {\n              // Show a success message to your customer\n              const color = 'success';\n              this.presentToast(color, 'Please complete the form');\n\t\t\t\t\t\t\t// this.alertService.success('Payment Successfull');\n\t\t\t\t\t\t\t       this.router.navigateByUrl('/home/user-profile');\n            }\n          }\n        }, err => {\n            this.presentToast(this.color, err.message);\n\t\t\t\t// this.alertService.danger(err.message);\n\t\t\t});\n    } else {\n\t\t\tconsole.log(this.stripeTest);\n      await loading.dismiss();\n   this.loading = false;\n   this.presentToast(this.color, 'Please complete the form');\n\t\t\t// this.alertService.danger('Please complete the form');\n    }\n  }\n\n\t// tslint:disable-next-line: variable-name\n\tcreatePaymentIntent(api_token, amount): Observable<PaymentIntent> {\n\t\tconst formData = new FormData();\n\t\tformData.append('api_token', api_token);\n\t\tformData.append('amount', amount);\n  return this.http.post<PaymentIntent>(\n      `${env.apiUrl}/pay`, formData);\n  }\n\n\tsetAmount(selectedPackage: any) {\n\t\tthis.priceSet = true;\n\t\tthis.title = selectedPackage;\n\t\tif (selectedPackage === 'founders') {\n\t\t\t// alert(selectedPackage);\n\t\t\t// this.alertService.success('yes');\n\t\t\tthis.amountinit = 24700;\n\t\t} else if (selectedPackage === 'premium') {\n\t\t\t// alert(selectedPackage);\n\t\t\tthis.amountinit = 3700;\n\t\t}\n\t}\n\n\n  async presentToast(color, message) {\n    const toast = await this.toastController.create({\n      message,\n      color,\n      duration: 3000\n    });\n    toast.present();\n  }\n  async freetrial() {\n    const loading = await this.loadingController.create({\n      spinner: null,\n      cssClass: 'custom-loading'\n    });\n    await loading.present();\n    this.admin.freeTrial(this.api_token).subscribe(async (res: any) => {\n      await loading.dismiss();\n      const color = 'primary';\n      this.presentToast(color, res.message);\n    });\n  }\n  getDetails() {\n    this.admin.getDetails(this.api_token).subscribe((res: any) => {\n      if (res.status === 'success') {\n        this.result = res.result;\n        // this.data = JSON.parse(this.result.data);\n        if (this.result.subscription_expiry === null) {\n          this.freeTrial = true;\n          this.upgrade = true;\n        }else{\n          this.freeTrial = false;\n        }\n        if (res.status === 'validate') {\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          // this.alertService.danger(res.message);\n          this.router.navigateByUrl('/auth/validate/ ' + this.api_token);\n        } else {\n        }\n      } else {\n        const color = 'danger';\n        this.presentToast(color, res.message);\n        // this.alertService.danger(res.message);\n      }\n      // console.log(res);\n\n      // console.log(this.data);\n    }, err => {\n      const color = 'danger';\n      this.presentToast(color, err.message);\n      // this.alertService.danger(err.message);\n    });\n  }\n\n\tgaryAccess() {\n\t\tconst ch_user_id = this.userDetails.ch_user_id;\n\t\tconst ch_user_email = this.userDetails.email;\n\t\t// console.log(`https://garyvip.managemych.club/link_rally?ch_user_id=${ch_user_id}&email=${ch_user_email}`)\n\t\twindow.open(`https://garyvip.managemych.club/link_rally?ch_user_id=${ch_user_id}&email=${ch_user_email}`);\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGdyYWRlLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/profile\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Upgrade\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <div *ngIf=\\\"freeTrial\\\" >\\n        <ion-button expand=\\\"full\\\" color=\\\"primary\\\" (click)=\\\"freetrial()\\\">Start free Trial</ion-button>\\n        </div>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-icon slot=\\\"end\\\" name=\\\"bar-chart-sharp\\\"></ion-icon>\\n        <ion-label>\\n          <p>Premium Plan</p>\\n          <h2>$37.00/month</h2>\\n        </ion-label>\\n      </ion-item>\\n\\n      <div class=\\\"ion-text-right\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"setAmount('premium')\\\">Select Plan</ion-button>\\n      </div>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-icon slot=\\\"end\\\" name=\\\"pie-chart-sharp\\\"></ion-icon>\\n        <ion-label>\\n          <p>Founders Package</p>\\n          <h2>$247.00/year</h2>\\n        </ion-label>\\n      </ion-item>\\n      <div class=\\\"ion-text-right\\\">\\n        <ion-button color=\\\"primary\\\" (click)=\\\"setAmount('founders')\\\">Select Plan</ion-button>\\n      </div>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-icon slot=\\\"end\\\" name=\\\"pie-chart-outline\\\"></ion-icon>\\n        <ion-label>\\n          <p>50 $GARY Access</p>\\n          <h2>Own 50 $GARY Coin</h2>\\n        </ion-label>\\n      </ion-item>\\n      <div class=\\\"ion-text-right\\\">\\n        <ion-button color=\\\"primary\\\" (click)=\\\"garyAccess()\\\">Select Plan</ion-button>\\n      </div>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngIf=\\\"priceSet\\\">\\n    <ion-card-header class=\\\"ion-text-center\\\">\\n      <ion-card-title>{{title | titlecase}} Plan</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ngx-stripe-card-group [formGroup]=\\\"stripeTest\\\" [elementsOptions]=\\\"elementsOptions\\\">\\n        <ion-item style=\\\"margin-bottom: 16px;\\\">\\n          <ion-label position=\\\"floating\\\">Card Holder's Name</ion-label>\\n          <ion-input minlength=\\\"6\\\" formControlName=\\\"name\\\" placeholder=\\\"Card Name\\\"></ion-input>\\n        </ion-item>\\n        <ngx-stripe-card [options]=\\\"cardOptions\\\" class=\\\"\\\"></ngx-stripe-card>\\n        <!-- </ngx-stripe-card> -->\\n      </ngx-stripe-card-group>\\n      <div class=\\\"ion-text-right\\\">\\n        <ion-button color=\\\"primary\\\" [disabled]=\\\"!stripeTest.valid\\\" type=\\\"submit\\\" (click)=\\\"pay()\\\">\\n          Upgrade Plan\\n        </ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}