{"version":3,"sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard.page.ts","./src/app/dashboard/dashboard.page.scss","./src/app/dashboard/dashboard.page.html"],"names":[],"mappings":"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","file":"src_app_dashboard_dashboard_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChartsModule,\n    DashboardPageRoutingModule,\n  ],\n  declarations: [DashboardPage],\n})\nexport class DashboardPageModule {}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/member-delimiter-style */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Storage } from '@capacitor/storage';\nimport { format } from 'date-fns';\nimport * as moment from 'moment';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\nimport { AppService } from 'src/app/_services/app.service';\nimport { GrServiceService } from './../_services/gr-service.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n  selectedData = 'total_rooms';\n  showData = 'total_rooms';\n  type = 'ch';\n  type2 = 'ch';\n  type3 = 'ch';\n  api_token: any;\n  date: string;\n  page = 1;\n  month: any;\n  current: any = {};\n  currentgr: any = {};\n  last: any = {};\n  lastgr: any = {};\n  color = '';\n  icon = '';\n  show: boolean;\n  percTotal: string;\n  percTotalgr: string;\n  total_listeners: string;\n  total_listenersgr: any;\n  avg: string;\n  new: string;\n  avggr: string;\n  newgr: string;\n  totalColor: any[];\n  totalColorgr: any[];\n  listenerColor: string[];\n  listenerColorgr: string[];\n  avgColor: string[];\n  newColor: string[];\n  avgColorgr: string[];\n  newColorgr: string[];\n  total_roomsData: number[] = [];\n  total_roomsDatagr: number[] = [];\n  total_listenersData: number[] = [];\n  total_listenersDatagr: number[] = [];\n  total_listened: number[] = [];\n  total_listenedgr: number[] = [];\n  avg_max_listeners: number[] = [];\n  avgData: number[] = [];\n  newData: number[] = [];\n  avgDatagr: number[] = [];\n  newDatagr: number[] = [];\n  avg_max_listenersgr: number[] = [];\n  total_roomsWk1: number;\n  total_roomsWk2: number;\n  total_roomsWk3: number;\n  total_roomsWk4: number;\n  total_roomsWk5: number;\n\n  total_roomsWk1gr: number;\n  total_roomsWk2gr: number;\n  total_roomsWk4gr: number;\n  total_roomsWk3gr: number;\n  total_roomsWk5gr: number;\n\n  total_listenersData_1: number;\n  total_listenersData_2: number;\n  total_listenersData_3: number;\n  total_listenersData_4: number;\n  total_listenersData_5: number;\n\n  total_listenersData_1gr: number;\n  total_listenersData_2gr: number;\n  total_listenersData_3gr: number;\n  total_listenersData_4gr: number;\n  total_listenersData_5gr: number;\n\n  total_listened_1: number;\n  total_listened_2: number;\n  total_listened_3: number;\n  total_listened_4: number;\n  total_listened_5: number;\n\n  total_listened_1gr: number;\n  total_listened_2gr: number;\n  total_listened_3gr: number;\n  total_listened_4gr: number;\n  total_listened_5gr: number;\n\n  avg_max_listeners_1: number;\n  avg_max_listeners_2: number;\n  avg_max_listeners_3: number;\n  avg_max_listeners_4: number;\n  avg_max_listeners_5: number;\n\n  avg_max_listeners_1gr: number;\n  avg_max_listeners_2gr: number;\n  avg_max_listeners_3gr: number;\n  avg_max_listeners_4gr: number;\n  avg_max_listeners_5gr: number;\n\n  avg_1: number;\n  avg_2: number;\n  avg_3: number;\n  avg_4: number;\n  avg_5: number;\n\n  avg_1gr: number;\n  avg_2gr: number;\n  avg_3gr: number;\n  avg_4gr: number;\n  avg_5gr: number;\n\n  new_1: number;\n  new_2: number;\n  new_3: number;\n  new_4: number;\n  new_5: number;\n\n  new_1gr: number;\n  new_2gr: number;\n  new_3gr: number;\n  new_4gr: number;\n  new_5gr: number;\n\n  allmoderators: any[];\n  public selectMonth: any = [\n    { name: 'January', value: 1 },\n    { name: 'February', value: 2 },\n    { name: 'March', value: 3 },\n    { name: 'April', value: 4 },\n    { name: 'May', value: 5 },\n    { name: 'June', value: 6 },\n    { name: 'July', value: 7 },\n    { name: 'August', value: 8 },\n    { name: 'September', value: 9 },\n    { name: 'October', value: 10 },\n    { name: 'November', value: 11 },\n    { name: 'December', value: 12 },\n  ];\n\n  public lineChartData: ChartDataSets[] = [\n    { data: this.total_roomsData, label: 'Total Rooms' },\n  ];\n  public lineChartDatagr: ChartDataSets[] = [\n    { data: this.total_roomsDatagr, label: 'Total Rooms' },\n  ];\n  public lineChartLabels: Label[] = [\n    'Week 1',\n    'Week 2',\n    'Week 3',\n    'Week 4',\n    'Week 5',\n  ];\n\n  public lineChartData2: ChartDataSets[] = [\n    { data: this.total_listenersData, label: 'Total Listeners' },\n  ];\n  public lineChartData2gr: ChartDataSets[] = [\n    { data: this.total_listenersDatagr, label: 'Total Listeners' },\n  ];\n\n  public lineChartData3: ChartDataSets[] = [\n    { data: this.total_listened, label: 'Total Listened Time' },\n  ];\n  public lineChartData3gr: ChartDataSets[] = [\n    { data: this.total_listenedgr, label: 'Total Listened Time' },\n  ];\n\n  public lineChartData4: ChartDataSets[] = [\n    { data: this.avg_max_listeners, label: 'Max Listeners' },\n  ];\n  public lineChartData4gr: ChartDataSets[] = [\n    { data: this.avg_max_listenersgr, label: 'Max Listeners' },\n  ];\n\n  public lineChartData5: ChartDataSets[] = [\n    { data: this.avgData, label: 'Avg Listened Time' },\n  ];\n  public lineChartData5gr: ChartDataSets[] = [\n    { data: this.avgDatagr, label: 'Avg Listened Time' },\n  ];\n\n  public lineChartData6: ChartDataSets[] = [\n    { data: this.newData, label: 'New Follower(s)' },\n  ];\n  public lineChartData6gr: ChartDataSets[] = [\n    { data: this.newDatagr, label: 'New Follower(s)' },\n  ];\n\n  public lineChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public lineChartColors: Color[] = [\n    {\n      // grey\n      backgroundColor: 'rgba(9, 175, 252, 0.2)',\n      borderColor: 'rgba(9, 175, 252,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderColor: 'rgba(9, 175, 252,1)',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177, 0.8)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartColors2: Color[] = [\n    {\n      backgroundColor: 'rgba(20, 128, 0, 0.3)',\n      borderColor: 'green',\n      pointBackgroundColor: '#fff',\n      pointBorderColor: 'green',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartColors3: Color[] = [\n    {\n      // dark grey\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'white',\n      pointBorderColor: 'rgba(77,83,96,1)',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartColors4: Color[] = [\n    {\n      // grey\n      backgroundColor: 'rgba(148,159,177,0.2)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'white',\n      pointBorderColor: 'rgba(148,159,177,1)',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n      pointBorderWidth: 3,\n    },\n  ];\n  public lineChartLegend = false;\n  public lineChartType: ChartType = 'line';\n  public lineChartPlugins = [];\n  month1: any = '';\n  month2: any = '';\n\n  customPopoverOptions: any = {\n    subHeader: ' Filter by',\n  };\n\n  customActionSheetOptions: any = {\n    header: 'Select Month',\n  };\n  moderators: any;\n  modLength: any;\n  fullData: any = [];\n  fullDatagr: any = [];\n  thisDay: Date;\n  durationDays: string;\n  name: any;\n  shownone = true;\n\n  constructor(\n    private router: Router,\n    private app: AppService,\n    private gr: GrServiceService,\n    private toastController: ToastController,\n    private loadingController: LoadingController\n  ) {}\n\n  async ngOnInit() {\n    const user: any = await JSON.parse(localStorage.getItem('user'));\n    const result = user.result;\n    this.api_token = result.api_token;\n    this.name = result.name;\n    this.date = moment().format('YYYY-MM-DD');\n    this.month = moment().format('MM');\n    this.month1 = moment().format('MMMM');\n    this.month2 = moment().format('MMMM');\n    // alert(this.month1);\n    // alert(this.month);\n    this.getPerformanceStats();\n    this.getGRPerformanceStats();\n    this.getWeeklyStats(this.month);\n    this.getWeeklyStatsgr(this.month);\n    this.getWeeklyTopRooms();\n    this.getWeeklyTopRoomsgr();\n  }\n\n  async doRefresh(ev) {\n    await this.ngOnInit();\n    ev.target.complete();\n  }\n\n  async getPerformanceStats() {\n    // this.date = '2021-04-07';\n    const loading = await this.loadingController.create({\n      spinner: null,\n      cssClass: 'custom-loading',\n    });\n    await loading.present();\n    this.app.performanceStats(this.api_token, this.date, this.page).subscribe(\n      async (res: any) => {\n        await loading.dismiss();\n        // console.log(res);\n        if (res.status === 'success') {\n          // this.shownone = false;\n          this.show = true;\n          this.current = res.result.current;\n          this.last = res.result.last;\n          this.percTotal = this.relDiff(\n            this.current.total_rooms,\n            this.last.total_rooms\n          );\n          this.totalColor = this.getColor(this.percTotal);\n          console.log(this.totalColor);\n          this.total_listeners = this.relDiff(\n            this.current.total_listeners,\n            this.last.total_listeners\n          );\n          this.listenerColor = this.getColor(this.total_listeners);\n          this.avg = this.relDiff(this.current.avg, this.last.avg);\n          this.avgColor = this.getColor(this.avg);\n          this.new = this.relDiff(this.current.new, this.last.new);\n          this.newColor = this.getColor(this.new);\n        } else if (res.status === 'upgrade') {\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          // this.shownone = true;\n          this.show = false;\n          // this.presentToast('danger',res.message);\n          // this.alertService.danger(res.message);\n          // this.router.navigateByUrl('/tabs/upgrade');\n        } else if (res.status === 'validate') {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          // this.router.navigateByUrl('/auth/validate/ ' + this.api_token);\n          this.presentToast(color, res.message);\n          //  this.shownone = true;\n          this.show = false;\n        } else {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          // this.shownone = true;\n          this.show = false;\n        }\n      },\n      (err) => {\n        this.presentToast('danger', err.message);\n        // console.log(err);\n      }\n    );\n  }\n\n  async getGRPerformanceStats() {\n    // this.date = '2021-04-07';\n    this.gr.performanceStats(this.api_token, this.date, this.page).subscribe(\n      async (res: any) => {\n        // console.log(res);\n        if (res.status === 'success') {\n          // this.show = true;\n          this.shownone = false;\n          this.currentgr = res.result.current;\n          this.lastgr = res.result.last;\n          this.percTotalgr = this.relDiff(\n            this.currentgr.total_rooms,\n            this.lastgr.total_rooms\n          );\n          this.totalColorgr = this.getColor(this.percTotalgr);\n          // console.log(this.totalColor);\n          this.total_listenersgr = this.relDiff(\n            this.currentgr.total_listeners,\n            this.lastgr.total_listeners\n          );\n          this.listenerColorgr = this.getColor(this.total_listenersgr);\n          this.avggr = this.relDiff(this.currentgr.avg, this.lastgr.avg);\n          this.avgColorgr = this.getColor(this.avggr);\n          this.newgr = this.relDiff(this.currentgr.new, this.lastgr.new);\n          this.newColorgr = this.getColor(this.newgr);\n        } else if (res.status === 'upgrade') {\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          // this.alertService.danger(res.message);\n          // this.router.navigateByUrl('/tabs/upgrade');\n          this.shownone = true;\n        } else if (res.status === 'validate') {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          // this.router.navigateByUrl('/auth/validate/ ' + this.api_token);\n          this.shownone = true;\n        } else {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          this.shownone = true;\n        }\n      },\n      (err) => {\n        this.presentToast('danger', err.message);\n        this.shownone = true;\n        // console.log(err);\n      }\n    );\n  }\n\n  async getWeeklyStats(month) {\n    //\n\n    this.total_roomsData.length = 0;\n    this.total_listenersData.length = 0;\n    this.total_listened.length = 0;\n    this.avgData.length = 0;\n    this.avg_max_listeners.length = 0;\n    this.newData.length = 0;\n    this.app.weeklyStats(this.api_token, month, this.page).subscribe(\n      async (res: any) => {\n        // await loading.dismiss();\n        // console.log(res);\n        if (res.status === 'success') {\n          // console.log(res);\n          this.show = true;\n          const sata = res.result;\n          this.total_roomsWk1 = parseFloat(sata.week1.total_rooms);\n          this.total_roomsWk2 = parseFloat(sata.week2.total_rooms);\n          this.total_roomsWk3 = parseFloat(sata.week3.total_rooms);\n          this.total_roomsWk4 = parseFloat(sata.week4.total_rooms);\n          this.total_roomsWk5 = parseFloat(sata.week5.total_rooms) || 0;\n          this.total_roomsData.push(\n            this.total_roomsWk1,\n            this.total_roomsWk2,\n            this.total_roomsWk3,\n            this.total_roomsWk4,\n            this.total_roomsWk5\n          );\n          // console.log(this.total_roomsData);\n\n          // total listeners\n          this.total_listenersData_1 = parseFloat(sata.week1.total_listeners);\n          this.total_listenersData_2 = parseFloat(sata.week2.total_listeners);\n          this.total_listenersData_3 = parseFloat(sata.week3.total_listeners);\n          this.total_listenersData_4 = parseFloat(sata.week4.total_listeners);\n          this.total_listenersData_5 =\n            parseFloat(sata.week5.total_listeners) || 0;\n\n          this.total_listenersData.push(\n            this.total_listenersData_1,\n            this.total_listenersData_2,\n            this.total_listenersData_3,\n            this.total_listenersData_4,\n            this.total_listenersData_5\n          );\n          // console.log(this.total_listenersData);\n\n          // total_listened\n          this.total_listened_1 = parseFloat(sata.week1.total_listened);\n          this.total_listened_2 = parseFloat(sata.week2.total_listened);\n          this.total_listened_3 = parseFloat(sata.week3.total_listened);\n          this.total_listened_4 = parseFloat(sata.week4.total_listened);\n          this.total_listened_5 = parseFloat(sata.week4.total_listened) || 0;\n\n          this.total_listened.push(\n            this.total_listened_1,\n            this.total_listened_2,\n            this.total_listened_3,\n            this.total_listened_4,\n            this.total_listened_5\n          );\n          // console.log(this.total_listened);\n\n          // avg_max_listeners\n          this.avg_max_listeners_1 = parseFloat(sata.week1.avg_max_listeners);\n          this.avg_max_listeners_2 = parseFloat(sata.week2.avg_max_listeners);\n          this.avg_max_listeners_3 = parseFloat(sata.week3.avg_max_listeners);\n          this.avg_max_listeners_4 = parseFloat(sata.week4.avg_max_listeners);\n          this.avg_max_listeners_5 =\n            parseFloat(sata.week4.avg_max_listeners) || 0;\n\n          this.avg_max_listeners.push(\n            this.avg_max_listeners_1,\n            this.avg_max_listeners_2,\n            this.avg_max_listeners_3,\n            this.avg_max_listeners_4,\n            this.avg_max_listeners_5\n          );\n          // console.log(this.avg_max_listeners);\n\n          // avgData\n          this.avg_1 = parseFloat(sata.week1.avg);\n          this.avg_2 = parseFloat(sata.week2.avg);\n          this.avg_3 = parseFloat(sata.week3.avg);\n          this.avg_4 = parseFloat(sata.week4.avg);\n          this.avg_5 = parseFloat(sata.week4.avg) || 0;\n\n          this.avgData.push(\n            this.avg_1,\n            this.avg_2,\n            this.avg_3,\n            this.avg_4,\n            this.avg_5\n          );\n          // console.log(this.avgData);\n\n          // newData\n          this.new_1 = parseFloat(sata.week1.new) || 0;\n          this.new_2 = parseFloat(sata.week2.new) || 0;\n          this.new_3 = parseFloat(sata.week3.new) || 0;\n          this.new_4 = parseFloat(sata.week4.new) || 0;\n          this.new_5 = parseFloat(sata.week4.new) || 0;\n\n          this.newData.push(\n            this.new_1,\n            this.new_2,\n            this.new_3,\n            this.new_4,\n            this.new_5\n          );\n          // console.log(this.newData);\n        } else if (res.status === 'upgrade') {\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          this.show = false;\n          // this.alertService.danger(res.message);\n          // this.router.navigateByUrl('/tabs/upgrade');\n        } else if (res.status === 'validate') {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.show = false;\n          this.presentToast(color, res.message);\n          // this.router.navigateByUrl('/auth/validate/ ' + this.api_token);\n        } else {\n          // this.alertService.danger(res.message);\n          this.show = false;\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          this.show = false;\n        }\n      },\n      (err) => {\n        this.presentToast('danger', err.message);\n        this.show = false;\n        // console.log(err);\n      }\n    );\n  }\n\n  async getWeeklyStatsgr(month) {\n    this.total_roomsDatagr.length = 0;\n    this.total_listenersDatagr.length = 0;\n    this.total_listenedgr.length = 0;\n    this.avgDatagr.length = 0;\n    this.avg_max_listenersgr.length = 0;\n    this.newDatagr.length = 0;\n    this.gr.weeklyStats(this.api_token, month, this.page).subscribe(\n      async (res: any) => {\n        // await loading.dismiss();\n        // console.log(res);\n        if (res.status === 'success') {\n          this.shownone = false;\n          // console.log(res);\n          const sata = res.result;\n          this.total_roomsWk1gr = parseFloat(sata.week1.total_rooms);\n          this.total_roomsWk2gr = parseFloat(sata.week2.total_rooms);\n          this.total_roomsWk3gr = parseFloat(sata.week3.total_rooms);\n          this.total_roomsWk4gr = parseFloat(sata.week4.total_rooms);\n          this.total_roomsWk5gr = parseFloat(sata.week5.total_rooms) || 0;\n          this.total_roomsDatagr.push(\n            this.total_roomsWk1gr,\n            this.total_roomsWk2gr,\n            this.total_roomsWk3gr,\n            this.total_roomsWk4gr,\n            this.total_roomsWk5gr\n          );\n          // console.log(this.total_roomsData);\n\n          // total listeners\n          this.total_listenersData_1gr = parseFloat(sata.week1.total_listeners);\n          this.total_listenersData_2gr = parseFloat(sata.week2.total_listeners);\n          this.total_listenersData_3gr = parseFloat(sata.week3.total_listeners);\n          this.total_listenersData_4gr = parseFloat(sata.week4.total_listeners);\n          this.total_listenersData_5gr =\n            parseFloat(sata.week5.total_listeners) || 0;\n\n          this.total_listenersDatagr.push(\n            this.total_listenersData_1gr,\n            this.total_listenersData_2gr,\n            this.total_listenersData_3gr,\n            this.total_listenersData_4gr,\n            this.total_listenersData_5gr\n          );\n          // console.log(this.total_listenersData);\n\n          // total_listened\n          this.total_listened_1gr = parseFloat(sata.week1.total_listened);\n          this.total_listened_2gr = parseFloat(sata.week2.total_listened);\n          this.total_listened_3gr = parseFloat(sata.week3.total_listened);\n          this.total_listened_4gr = parseFloat(sata.week4.total_listened);\n          this.total_listened_5gr = parseFloat(sata.week4.total_listened) || 0;\n\n          this.total_listenedgr.push(\n            this.total_listened_1gr,\n            this.total_listened_2gr,\n            this.total_listened_3gr,\n            this.total_listened_4gr,\n            this.total_listened_5gr\n          );\n          // console.log(this.total_listened);\n\n          // avg_max_listeners\n          this.avg_max_listeners_1gr = parseFloat(sata.week1.avg_max_listeners);\n          this.avg_max_listeners_2gr = parseFloat(sata.week2.avg_max_listeners);\n          this.avg_max_listeners_3gr = parseFloat(sata.week3.avg_max_listeners);\n          this.avg_max_listeners_4gr = parseFloat(sata.week4.avg_max_listeners);\n          this.avg_max_listeners_5gr =\n            parseFloat(sata.week4.avg_max_listeners) || 0;\n\n          this.avg_max_listenersgr.push(\n            this.avg_max_listeners_1gr,\n            this.avg_max_listeners_2gr,\n            this.avg_max_listeners_3gr,\n            this.avg_max_listeners_4gr,\n            this.avg_max_listeners_5gr\n          );\n          // console.log(this.avg_max_listeners);\n\n          // avgData\n          this.avg_1gr = parseFloat(sata.week1.avg);\n          this.avg_2gr = parseFloat(sata.week2.avg);\n          this.avg_3gr = parseFloat(sata.week3.avg);\n          this.avg_4gr = parseFloat(sata.week4.avg);\n          this.avg_5gr = parseFloat(sata.week4.avg) || 0;\n\n          this.avgDatagr.push(\n            this.avg_1gr,\n            this.avg_2gr,\n            this.avg_3gr,\n            this.avg_4gr,\n            this.avg_5gr\n          );\n          // console.log(this.avgData);\n\n          // newData\n          this.new_1gr = parseFloat(sata.week1.new) || 0;\n          this.new_2gr = parseFloat(sata.week2.new) || 0;\n          this.new_3gr = parseFloat(sata.week3.new) || 0;\n          this.new_4gr = parseFloat(sata.week4.new) || 0;\n          this.new_5gr = parseFloat(sata.week4.new) || 0;\n\n          this.newDatagr.push(\n            this.new_1gr,\n            this.new_2gr,\n            this.new_3gr,\n            this.new_4gr,\n            this.new_5gr\n          );\n          // console.log(this.newData);\n        } else if (res.status === 'upgrade') {\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          this.shownone = true;\n          // this.alertService.danger(res.message);\n          // this.router.navigateByUrl('/tabs/upgrade');\n        } else if (res.status === 'validate') {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          this.shownone = true;\n          // this.router.navigateByUrl('/auth/validategr/ ' + this.api_token);\n        } else {\n          // this.alertService.danger(res.message);\n          const color = 'danger';\n          this.presentToast(color, res.message);\n          this.shownone = true;\n        }\n      },\n      (err) => {\n        this.presentToast('danger', err.message);\n        this.shownone = true;\n        // console.log(err);\n      }\n    );\n  }\n\n  async getWeeklyTopRooms() {\n    this.app\n      .WeeklyTopRooms(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        if (res.status === 'success') {\n          const arr = res.result;\n          this.fullData = arr.slice(Math.max(arr.length - 3, 0));\n          //           date_ended: \"2021-07-03 16:07:56\"\n          // date_started: \"2021-07-03 10:11:01\"\n          // alert(this.thisDay);\n        } else {\n        }\n      });\n  }\n\n  async getWeeklyTopRoomsgr() {\n    this.gr\n      .WeeklyTopRooms(this.api_token, this.date)\n      .subscribe(async (res: any) => {\n        if (res.status === 'success') {\n          const arr = res.result;\n          this.fullDatagr = arr.slice(Math.max(arr.length - 3, 0));\n          //           date_ended: \"2021-07-03 16:07:56\"\n          // date_started: \"2021-07-03 10:11:01\"\n          // alert(this.thisDay);\n        } else {\n        }\n      });\n  }\n\n  public randomize(): void {\n    this.lineChartType = this.lineChartType === 'line' ? 'bar' : 'line';\n  }\n\n  onClick(channel) {\n    this.router.navigateByUrl('/tabs/chtools/track/' + channel);\n  }\n\n  getDateDiff(now, end) {\n    // console.log(now, end);\n    // const now = moment(new Date()); //todays date\n    // const end = moment('2015-12-1'); // another date\n    const data = now.split();\n    const testing = data[0].replace(/-/g, '/');\n    const data2 = end.split();\n    const testing2 = data2[0].replace(/-/g, '/');\n    // const datta2 = dattta[0].replace(/T/g, ' ');\n    const duration = moment(testing2, 'YYYY/MM/DD HH:mm:ss').diff(\n      moment(testing, 'YYYY/MM/DD HH:mm:ss')\n    );\n    // const days = duration.asHours();\n    const secssss = moment.duration(duration).seconds();\n    const minsss = moment.duration(duration).minutes();\n    const hrsss = Math.trunc(moment.duration(duration).asHours());\n    this.durationDays = hrsss + ':' + minsss + ':' + secssss;\n    // console.log(this.durationDays);\n    return this.durationDays;\n  }\n\n  changedData(event) {\n    // console.log(this.selectedData);\n    // console.log(event);\n    this.showData = this.selectedData;\n  }\n  // transformMinute(value: number): string {\n  //   const hours = Math.floor(value / 60);\n  //   const minutes = Math.floor(value % 60);\n  //   return hours + ':' + minutes;\n  // }\n  convert(value: number) {\n    const data: any = moment.duration(value, 'minutes');\n    // console.log(data._data);\n    return data._data.minutes + ':' + data._data.seconds;\n  }\n\n  relDiff(a, b) {\n    if (a == null) {\n      a = 0;\n    }\n    if (b == null) {\n      b = 0;\n    }\n    // if (a === null || b== null) {\n    //   return '';\n    // }\n    let total;\n    const decreaseValue = parseFloat(a) - parseFloat(b);\n    if (b === 0) {\n      total = 0;\n    } else {\n      total = ((decreaseValue / b) * 100).toFixed(2);\n    }\n    return total;\n    // return  100 * Math.abs( (( a - b ) / (b)) * 100 ); Math.sign(2)\n  }\n\n  getColor(total) {\n    //  console.log(Math.sign(parseFloat(total)));\n    if (Math.sign(parseFloat(total)) === 1) {\n      this.color = 'green';\n      this.icon = 'arrow-up-outline';\n    } else if (Math.sign(parseFloat(total)) === 0) {\n      this.icon = '';\n      this.color = 'black';\n    } else {\n      this.icon = 'arrow-down-outline';\n      this.color = 'red';\n    }\n    return [this.color, this.icon];\n  }\n\n  segmentChanged(ev) {\n    // console.log(ev);\n  }\n\n  gotoCHTOOLS() {\n    this.router.navigateByUrl('/tabs/home');\n  }\n  onClick2(channel) {\n    this.router.navigateByUrl('/tabs/grtools/track/' + channel);\n  }\n\n  async presentToast(color, message) {\n    const toast = await this.toastController.create({\n      message,\n      color,\n      duration: 1500,\n    });\n    toast.present();\n  }\n\n  async selectAMonth(ev: any) {\n    const num = ev - 1;\n    this.month1 = moment().month(num).format('MMMM');\n    this.getWeeklyStats(ev);\n  }\n\n  async selectAMonthgr(ev: any) {\n    const num = ev - 1;\n    this.month2 = moment().month(num).format('MMMM');\n    this.getWeeklyStatsgr(ev);\n  }\n}\n","export default \".newsDiv {\\n  display: block;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background-color: #c5ebc2 !important;\\n}\\n\\n.coloredCard {\\n  background-color: var(--ion-color-primary);\\n  padding: 60px !important;\\n  border-radius: 20px;\\n}\\n\\n.toolscard {\\n  text-align: center !important;\\n  border-radius: 20px;\\n}\\n\\n.clear {\\n  clear: both;\\n}\\n\\n.tabbar {\\n  width: 60vw !important;\\n  float: left;\\n  overflow: scroll !important;\\n  font-size: 0.8em !important;\\n}\\n\\nion-segment-button {\\n  font-size: 0.8em !important;\\n}\\n\\n.right {\\n  float: right !important;\\n}\\n\\n.moreButton {\\n  font-size: 0.8em;\\n  color: var(--ion-color-dark);\\n}\\n\\n.red {\\n  color: red !important;\\n}\\n\\n.green {\\n  color: green !important;\\n}\\n\\n.black {\\n  color: var(--ion-color-dark);\\n}\\n\\n.selectFilter {\\n  --border-width: 1px !important;\\n  --border-color: var(--ion-color-light);\\n  --border-radius: 5px !important;\\n}\\n\\n.image {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.creators {\\n  margin-right: 5px !important;\\n  width: 50px !important;\\n  height: 50px !important;\\n  border-radius: 50%;\\n}\\n\\n.clear {\\n  clear: both;\\n}\\n\\np {\\n  font-size: 0.8em !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsVUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQ0FBQTtBQUNGOztBQUNBO0VBQ0UsMENBQUE7RUFDQSx3QkFBQTtFQUNBLG1CQUFBO0FBRUY7O0FBRUE7RUFDRSw2QkFBQTtFQUVBLG1CQUFBO0FBQUY7O0FBRUE7RUFDRSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSxzQkFBQTtFQUNBLFdBQUE7RUFDQSwyQkFBQTtFQUNBLDJCQUFBO0FBQ0Y7O0FBRUE7RUFDRSwyQkFBQTtBQUNGOztBQUNBO0VBQ0UsdUJBQUE7QUFFRjs7QUFBQTtFQUNFLGdCQUFBO0VBQ0EsNEJBQUE7QUFHRjs7QUFEQTtFQUNFLHFCQUFBO0FBSUY7O0FBRkE7RUFDRSx1QkFBQTtBQUtGOztBQUhBO0VBQ0UsNEJBQUE7QUFNRjs7QUFHQTtFQUNFLDhCQUFBO0VBQ0Esc0NBQUE7RUFFQSwrQkFBQTtBQURGOztBQXdCQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUFyQkY7O0FBd0JBO0VBQ0UsNEJBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7QUFyQkY7O0FBdUJBO0VBQ0UsV0FBQTtBQXBCRjs7QUF1QkE7RUFDRSwyQkFBQTtBQXBCRiIsImZpbGUiOiJkYXNoYm9hcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5ld3NEaXYge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTcsIDIzNSwgMTk0KSAhaW1wb3J0YW50O1xyXG59XHJcbi5jb2xvcmVkQ2FyZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gIHBhZGRpbmc6IDYwcHggIWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gIC8vIGNvbG9yOiByZ2IoMCwgMTI4LCAwKTtcclxufVxyXG5cclxuLnRvb2xzY2FyZCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgLy8gcGFkZGluZzogMzBweCAyMHB4ICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxufVxyXG4uY2xlYXIge1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcblxyXG4udGFiYmFyIHtcclxuICB3aWR0aDogNjB2dyAhaW1wb3J0YW50O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG92ZXJmbG93OiBzY3JvbGwgIWltcG9ydGFudDtcclxuICBmb250LXNpemU6IDAuOGVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmlvbi1zZWdtZW50LWJ1dHRvbiB7XHJcbiAgZm9udC1zaXplOiAwLjhlbSAhaW1wb3J0YW50O1xyXG59XHJcbi5yaWdodCB7XHJcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbn1cclxuLm1vcmVCdXR0b24ge1xyXG4gIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYXJrKTtcclxufVxyXG4ucmVkIHtcclxuICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XHJcbn1cclxuLmdyZWVuIHtcclxuICBjb2xvcjogZ3JlZW4gIWltcG9ydGFudDtcclxufVxyXG4uYmxhY2sge1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFyayk7XHJcbn1cclxuLy8gaW9uLWxhYmVsLFxyXG4vLyBpb24tY29sLFxyXG4vLyBpb24tZ3JpZCB7XHJcbi8vICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XHJcbi8vICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4vLyB9XHJcblxyXG4uc2VsZWN0RmlsdGVyIHtcclxuICAtLWJvcmRlci13aWR0aDogMXB4ICFpbXBvcnRhbnQ7XHJcbiAgLS1ib3JkZXItY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XHJcbiAgLy8gLS1ib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1pb24tY29sb3ItbWVkdW0pICFpbXBvcnRhbnQ7XHJcbiAgLS1ib3JkZXItcmFkaXVzOiA1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLy8gLmJnQ2gge1xyXG4vLyAgIC8vIGhlaWdodDogMTl2aCAhaW1wb3J0YW50O1xyXG4vLyAgIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL2Fzc2V0cy9pbWcvY2guanBnXCIpIDAgMC8gMTAwJSAxMDAlO1xyXG4vLyAgIC8vIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbi8vICAgLy8gYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4vLyAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciAhaW1wb3J0YW50O1xyXG4vLyAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQgIWltcG9ydGFudDtcclxuLy8gfVxyXG5cclxuLy8gLmJnR3Ige1xyXG4vLyAgIC8vIGhlaWdodDogMTl2aCAhaW1wb3J0YW50O1xyXG4vLyAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xyXG4vLyAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbi8vICAgYmFja2dyb3VuZDogdXJsKFwiLi4vLi4vYXNzZXRzL2ltZy9nci5qcGdcIikgMCAwLyAxMDAlIDEwMCU7XHJcbi8vICAgLy8gYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuLy8gICAvLyBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IHVuc2V0O1xyXG4vLyAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciAhaW1wb3J0YW50O1xyXG4vLyAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQgIWltcG9ydGFudDtcclxuLy8gfVxyXG5cclxuLmltYWdlIHtcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgLy8gbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG4uY3JlYXRvcnMge1xyXG4gIG1hcmdpbi1yaWdodDogNXB4ICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDUwcHggIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuLmNsZWFyIHtcclxuICBjbGVhcjogYm90aDtcclxufVxyXG5cclxucHtcclxuICBmb250LXNpemU6IC44ZW0gIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\";","export default \"<ion-header class=\\\"ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar>\\n    <ion-title>Hello {{ name }} </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-card style=\\\"border-radius: 20px\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle>\\n        <ion-item>\\n          <ion-label>\\n            <p>{{ date | date: 'dd MMMM, YYYY' }}</p>\\n            <h1></h1>\\n          </ion-label>\\n        </ion-item>\\n      </ion-card-subtitle>\\n      <ion-card-subtitle>\\n        <div class=\\\"tabbar\\\">\\n          <ion-segment [(ngModel)]=\\\"type2\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n            <ion-segment-button value=\\\"ch\\\">\\n              <ion-label>Clubhouse</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"gr\\\">\\n              <ion-label>GreenRoom</ion-label>\\n            </ion-segment-button>\\n          </ion-segment>\\n        </div>\\n\\n        <div class=\\\"clear\\\"></div>\\n      </ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content [ngSwitch]=\\\"type2\\\" class=\\\"ion-no-padding\\\">\\n      <div *ngSwitchCase=\\\"'ch'\\\">\\n        <ion-grid class=\\\"noPM\\\" *ngIf=\\\"show\\\">\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>No of Rooms</p>\\n                  <h1>{{ current.total_rooms }}</h1>\\n                  <ion-button expand=\\\"full\\\" fill=\\\"clear\\\">\\n                    <span [class]=\\\"totalColor[0]\\\">\\n                      <ion-icon [name]=\\\"totalColor[1]\\\"></ion-icon>{{ percTotal\\n                      }}%\\n                    </span>\\n                  </ion-button>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>Total Listeners</p>\\n                  <h1>{{ current.total_listeners | number}}</h1>\\n                  <!-- <h2><span class=\\\"red\\\"><ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>34%</span></h2> -->\\n                  <ion-button expand=\\\"full\\\" fill=\\\"clear\\\">\\n                    <span [class]=\\\"listenerColor[0]\\\">\\n                      <ion-icon [name]=\\\"listenerColor[1]\\\"></ion-icon>{{\\n                      total_listeners }}%\\n                    </span>\\n                  </ion-button>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>Avg Listened time</p>\\n                  <h1>{{ convert(current.avg) }}</h1>\\n                  <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n                    <span [class]=\\\"avgColor[0]\\\">\\n                      <ion-icon [name]=\\\"avgColor[1]\\\"></ion-icon>{{ avg }}%\\n                    </span>\\n                  </ion-button>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>New Followers</p>\\n                  <h1>{{ current.new || 0 | number}}</h1>\\n                  <h2>\\n                    <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n                      <span [class]=\\\"newColor[0]\\\">\\n                        <ion-icon [name]=\\\"newColor[1]\\\"></ion-icon>{{ new}}%\\n                      </span>\\n                    </ion-button>\\n                  </h2>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </div>\\n\\n      <div *ngSwitchCase=\\\"'gr'\\\">\\n        <ion-grid class=\\\"noPM\\\" *ngIf=\\\"!shownone\\\">\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>No of Rooms</p>\\n                  <h1>{{ currentgr.total_rooms }}</h1>\\n                  <ion-button expand=\\\"full\\\" fill=\\\"clear\\\">\\n                    <span [class]=\\\"totalColorgr[0]\\\">\\n                      <ion-icon [name]=\\\"totalColorgr[1]\\\"></ion-icon>{{\\n                      percTotalgr }}%\\n                    </span>\\n                  </ion-button>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>Total Listeners</p>\\n                  <h1>{{ currentgr.total_listeners | number}}</h1>\\n                  <!-- <h2><span class=\\\"red\\\"><ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>34%</span></h2> -->\\n                  <ion-button expand=\\\"full\\\" fill=\\\"clear\\\">\\n                    <span [class]=\\\"listenerColorgr[0]\\\">\\n                      <ion-icon [name]=\\\"listenerColorgr[1]\\\"></ion-icon>{{\\n                      total_listenersgr }}%\\n                    </span>\\n                  </ion-button>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>Avg Listened time</p>\\n                  <h1>{{ convert(currentgr.avg) }}</h1>\\n                  <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n                    <span [class]=\\\"avgColorgr[0]\\\">\\n                      <ion-icon [name]=\\\"avgColorgr[1]\\\"></ion-icon>{{ avggr }}%\\n                    </span>\\n                  </ion-button>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n                <ion-label>\\n                  <p>New Followers</p>\\n                  <h1>{{ currentgr.new | number}}</h1>\\n                  <h2>\\n                    <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n                      <span [class]=\\\"newColorgr[0]\\\">\\n                        <ion-icon [name]=\\\"newColorgr[1]\\\"></ion-icon>{{ newgr}}%\\n                      </span>\\n                    </ion-button>\\n                  </h2>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </div>\\n      <div class=\\\"ion-text-center\\\">\\n        <p style=\\\"font-size: .7em !important;\\\">All % data are compared to last week</p>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <!-- tools -->\\n  <div style=\\\"margin-top: 4vh\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h4 style=\\\"margin-bottom: 0, margin\\\" class=\\\"ion-margin-start\\\">TOOLS</h4>\\n    </ion-text>\\n    <ion-grid fixed>\\n      <ion-row class=\\\"mt0\\\">\\n        <ion-col size=\\\"6\\\">\\n          <ion-card color=\\\"light\\\" class=\\\"toolscard bgCh\\\" [routerLink]=\\\"['/tabs/chtools']\\\"\\n            routerLinkActive=\\\"router-link-active\\\">\\n            <ion-img src=\\\"assets/img/ch.jpg\\\"></ion-img>\\n          </ion-card>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-card color=\\\"success\\\" class=\\\"toolscard bgGr\\\" [routerLink]=\\\"['/tabs/grtools']\\\"\\n            routerLinkActive=\\\"router-link-active\\\">\\n            <ion-img src=\\\"assets/img/gr.jpg\\\"></ion-img>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n\\n  <!-- Canva -->\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-subtitle>\\n        <div class=\\\"tabbar\\\">\\n          <ion-segment [(ngModel)]=\\\"type3\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n            <ion-segment-button value=\\\"ch\\\">\\n              <ion-label>Clubhouse</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"gr\\\">\\n              <ion-label>GreenRoom</ion-label>\\n            </ion-segment-button>\\n          </ion-segment>\\n        </div>\\n\\n        <div class=\\\"clear\\\"></div>\\n      </ion-card-subtitle>\\n      <!-- <ion-card-subtitle>\\n\\n      </ion-card-subtitle> -->\\n    </ion-card-header>\\n    <div [ngSwitch]=\\\"type3\\\">\\n      <div *ngSwitchCase=\\\"'ch'\\\">\\n        <div *ngIf=\\\"show\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <p>Weekly Report for {{ month1 }}</p>\\n          </div>\\n\\n          <ion-grid fixed>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\" class=\\\"selectFilter\\\">\\n                  <ion-select mode=\\\"ios\\\" value=\\\"month\\\" [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                    interface=\\\"action-sheet\\\" placeholder=\\\"Select Month\\\" ngModel=\\\"month1\\\"\\n                    (ngModelChange)=\\\"selectAMonth($event)\\\">\\n                    <ion-select-option *ngFor=\\\"let item of selectMonth\\\" [value]=\\\"item.value\\\">\\n                      {{ item.name }}\\n                    </ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\" class=\\\"selectFilter\\\">\\n                  <ion-select mode=\\\"md\\\" [interfaceOptions]=\\\"customPopoverOptions\\\" interface=\\\"popover\\\"\\n                    value=\\\"selectedData\\\" placeholder=\\\"Filter\\\" [(ngModel)]=\\\"selectedData\\\"\\n                    (ngModelChange)=\\\"changedData($event)\\\">\\n                    <ion-select-option value=\\\"total_rooms\\\" selected=\\\"true\\\">Total Rooms</ion-select-option>\\n                    <ion-select-option value=\\\"total_listeners\\\">Total Listeners</ion-select-option>\\n                    <ion-select-option value=\\\"total_listened\\\">Total Listened Time</ion-select-option>\\n                    <ion-select-option value=\\\"avg_max_listeners\\\">Avg Max Listeners</ion-select-option>\\n\\n                    <ion-select-option value=\\\"avg\\\">Avg Listened Time</ion-select-option>\\n                    <ion-select-option value=\\\"new\\\">New Followers</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n\\n\\n          <div *ngIf=\\\"showData === 'total_rooms'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n          <div *ngIf=\\\"showData === 'total_listeners'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData2\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors2\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'total_listened'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData3\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors3\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'avg_max_listeners'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData4\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors4\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'avg'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData5\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'new'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData6\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors2\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n          <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize()\\\">\\n            <a>\\n              <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n            </a>\\n            <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n              <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n                Change Style\\n              </p>\\n            </ion-text>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngSwitchCase=\\\"'gr'\\\">\\n        <div *ngIf=\\\"!shownone\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <p>Weekly Report for {{ month2 }}</p>\\n          </div>\\n          <ion-grid fixed>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\" class=\\\"selectFilter\\\">\\n                  <ion-select mode=\\\"ios\\\" value=\\\"month\\\" [interfaceOptions]=\\\"customActionSheetOptions\\\"\\n                    interface=\\\"action-sheet\\\" placeholder=\\\"Select Month\\\" ngModel=\\\"month2\\\"\\n                    (ngModelChange)=\\\"selectAMonthgr($event)\\\">\\n                    <ion-select-option *ngFor=\\\"let item of selectMonth\\\" [value]=\\\"item.value\\\">\\n                      {{ item.name }}\\n                    </ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\" class=\\\"selectFilter\\\">\\n                  <ion-select mode=\\\"md\\\" [interfaceOptions]=\\\"customPopoverOptions\\\" interface=\\\"popover\\\"\\n                    value=\\\"selectedData\\\" placeholder=\\\"Filter\\\" [(ngModel)]=\\\"selectedData\\\"\\n                    (ngModelChange)=\\\"changedData($event)\\\">\\n                    <ion-select-option value=\\\"total_rooms\\\" selected=\\\"true\\\">Total Rooms</ion-select-option>\\n                    <ion-select-option value=\\\"total_listeners\\\">Total Listeners</ion-select-option>\\n                    <ion-select-option value=\\\"total_listened\\\">Total Listened Time</ion-select-option>\\n                    <ion-select-option value=\\\"avg_max_listeners\\\">Avg Max Listeners</ion-select-option>\\n\\n                    <ion-select-option value=\\\"avg\\\">Avg Listened Time</ion-select-option>\\n                    <ion-select-option value=\\\"new\\\">New Followers</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n          <div *ngIf=\\\"showData === 'total_rooms'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartDatagr\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n          <div *ngIf=\\\"showData === 'total_listeners'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData2gr\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors2\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'total_listened'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData3gr\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors3\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'avg_max_listeners'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData4gr\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors4\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'avg'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData5gr\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n\\n          <div *ngIf=\\\"showData === 'new'\\\">\\n            <canvas baseChart height=\\\"300\\\" [datasets]=\\\"lineChartData6gr\\\" [labels]=\\\"lineChartLabels\\\"\\n              [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors2\\\" [legend]=\\\"lineChartLegend\\\"\\n              [chartType]=\\\"lineChartType\\\" [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n          </div>\\n          <div style=\\\"text-align: center !important; padding: 10px\\\" (click)=\\\"randomize()\\\">\\n            <a>\\n              <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\" color=\\\"primary\\\"></ion-icon>\\n            </a>\\n            <ion-text color=\\\"primary\\\" style=\\\"display: block !important\\\">\\n              <p style=\\\"font-size: 0.6em !important; margin: 0; padding: 0\\\">\\n                Change Style\\n              </p>\\n            </ion-text>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </ion-card>\\n\\n  <!-- tOP ROOMS -->\\n  <div style=\\\"margin: 5vh 16px 16px !important\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h4 style=\\\"margin-bottom: 0\\\">\\n        <span class=\\\"ion-float-left\\\"> TOP ROOMS </span>\\n        <!-- <span class=\\\"ion-float-right\\\">\\n          <a [routerLink]=\\\"['/tabs/toprooms']\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"moreButton\\\">More</a></span> -->\\n      </h4>\\n    </ion-text>\\n    <div class=\\\"clear\\\"></div>\\n    <br>\\n\\n    <div class=\\\"tabbar\\\">\\n      <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" swipeGesture=\\\"true\\\">\\n        <ion-segment-button value=\\\"ch\\\">\\n          <ion-label>Clubhouse</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"gr\\\">\\n          <ion-label>GreenRoom</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </div>\\n\\n    <div class=\\\"clear\\\"></div>\\n  </div>\\n\\n  <div [ngSwitch]=\\\"type\\\">\\n    <div *ngSwitchCase=\\\"'ch'\\\">\\n      <div *ngIf=\\\"show\\\">\\n        <div *ngFor=\\\"let item of fullData\\\">\\n          <ion-card (click)=\\\"onClick(item.channel)\\\">\\n            <ion-card-content>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label class=\\\"ion-text-wrap\\\">\\n                  <h2>{{ item.topic }}</h2>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <span class=\\\"ion-align-items-center\\\">\\n                    <ion-icon name=\\\"chatbox-ellipses-outline\\\"></ion-icon>\\n                  </span>\\n                  {{ item.end_total_speakers }}\\n                </ion-label>\\n                <ion-label>\\n                  <ion-icon name=\\\"people-outline\\\"></ion-icon> {{\\n                  item.end_total_listeners }}\\n                </ion-label>\\n                <ion-label>\\n                  <ion-icon name=\\\"time-outline\\\"></ion-icon> {{\\n                  getDateDiff(item.date_started, item.date_ended)}}\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n\\n                <ion-label>\\n                  <p>Date: {{ item.date_ended }}</p>\\n                </ion-label>\\n              </ion-item>\\n              <!-- <div class=\\\"image\\\">\\n                      <span *ngFor=\\\"let moderator of allmoderators\\\">\\n                        <img\\n                          [src]=\\\"moderator.photo_url\\\"\\n                          class=\\\"creators\\\"\\n                          alt=\\\"\\\"\\n                          srcset=\\\"\\\"\\n                        />\\n                      </span>\\n                      <span\\n                        style=\\\"\\n                          float: right;\\n                          color: #fff !important;\\n                          background-color: rgb(122, 121, 121);\\n                          border-radius: 50%;\\n                          margin-top: 12px;\\n                          padding: 5px;\\n                        \\\"\\n                        *ngIf=\\\"modLength > 5\\\"\\n                        >+{{ modLength - 5 }}\\n                      </span>\\n                      <div class=\\\"clear\\\"></div>\\n                    </div> -->\\n            </ion-card-content>\\n          </ion-card>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"'gr'\\\">\\n      <div *ngIf=\\\"!shownone\\\">\\n        <div *ngFor=\\\"let item of fullDatagr\\\">\\n          <ion-card (click)=\\\"onClick2(item.channel)\\\">\\n            <ion-card-content>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label class=\\\"ion-text-wrap\\\">\\n                  <h2>{{ item.topic }}</h2>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <span class=\\\"ion-align-items-center\\\">\\n                    <ion-icon name=\\\"chatbox-ellipses-outline\\\"></ion-icon>\\n                  </span>\\n                  {{ item.end_total_speakers }}\\n                </ion-label>\\n                <ion-label>\\n                  <ion-icon name=\\\"people-outline\\\"></ion-icon> {{\\n                  item.end_total_listeners }}\\n                </ion-label>\\n                <ion-label>\\n                  <ion-icon name=\\\"time-outline\\\"></ion-icon> {{\\n                  getDateDiff(item.date_started, item.date_ended)}}\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n\\n                <ion-label>\\n                  <p>Date: {{ item.date_ended }}</p>\\n                </ion-label>\\n              </ion-item>\\n            </ion-card-content>\\n          </ion-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}